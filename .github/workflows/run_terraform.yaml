name: Terraform Manual Deploy

on:
  workflow_dispatch:  # ðŸ‘ˆ allows manual triggering

permissions:
  contents: write

jobs:
  terraform:
    name: Run Terraform Manually
    runs-on: ubuntu-latest

    env:
      AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
      AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}

    steps:
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1

      - name: Checkout code
        uses: actions/checkout@v3

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: 1.6.6

      - name: Terraform Init
        run: terraform init

      - name: Terraform Plan
        run: terraform plan -out=tfplan.out

      - name: Terraform Apply
        run: terraform apply -auto-approve tfplan.out

      - name: Push changes
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        if: always()
        run: |
          git config --global user.name "github-actions[bot]"
          git config --global user.email "github-actions[bot]@users.noreply.github.com"

          git add terraform.tfstate terraform.tfstate.backup
          git diff --cached --quiet || git commit -m "Update Terraform state from workflow"

          git push https://x-access-token:${GH_TOKEN}@github.com/${{ github.repository }}.git HEAD:${{ github.ref_name }}

      - name: Send Full GitHub Logs to Splunk
        if: always()
        run: |
          sudo apt-get update && sudo apt-get install -y jq unzip curl

          echo "ðŸ”§ Downloading logs from GitHub API..."

          curl -sL \
            -H "Authorization: token ${{ secrets.GITHUB_TOKEN }}" \
            -H "Accept: application/vnd.github.v3+json" \
            -o logs.zip \
            "https://api.github.com/repos/${{ github.repository }}/actions/runs/${{ github.run_id }}/logs"

          unzip -o logs.zip -d logs_folder

          echo "ðŸ“¤ Sending each log file to Splunk..."
          for logfile in logs_folder/**/*.txt logs_folder/*.txt; do
            LOG_CONTENT=$(cat "$logfile" | jq -Rs .)
            PAYLOAD=$(jq -n \
              --arg log $LOG_CONTENT \
              --arg filename "$logfile" \
              --arg index "main" \
              '{
                event: {
                  log_file: $filename,
                  log_content: $log
                },
                sourcetype: "github-logs",
                index: $index
              }')

            curl -s -k -X POST \
              -H "Authorization: Splunk $HEC_TOKEN" \
              -H "Content-Type: application/json" \
              -d "$PAYLOAD" \
              "$HEC_URL/services/collector/event"
          done
        env:
          HEC_TOKEN: ${{ secrets.SPLUNK_HEC_TOKEN }}
          HEC_URL: ${{ secrets.SPLUNK_HEC_URL }}
